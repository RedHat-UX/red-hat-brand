<script webc:setup>
  function filterCollectionByLanguage(collection, lang) {
    return [...collection.filter(a => {
      // return only pages from the collection that are of the current pages language
      return a.data.page.lang === lang
    })];
  }

  function sortByOrder(collection, sort) {
    return collection.sort(function(a, b) {
      if (sort === "alpha") {
        if (a.data.title < b.data.title) return -1;
        if (a.data.title > b.data.title) return 1;
      } else if (sort === "date") {
        return b.data.date - a.data.date;
      } else if (sort === "order") {
        return a.data.order - b.data.order;
      }
    });
  }

  function getItemList(collections, tag, lang, limit=0, sort="alpha", link="false") {
    const collectionCopy = [...collections[tag]];
    const filteredByLanguageCopy = filterCollectionByLanguage(collectionCopy, lang);

    let result = filteredByLanguageCopy.reverse();
    result = sortByOrder(result, sort);

    return limit ? result.slice(0, limit) : result;
  }

	function build($data, tag, limit, sort, link, klass) {
		const list = getItemList($data.collections, tag, $data.page.lang, 0, sort);
		const items = list.map(item => {
			let html = `<a href="${item.data.page.url}" class="${klass ?? ''}">${item.data.title}</a>`;
			if (link !== "true") {
				html = `<li>${html}</li>`;
			}
			return html;
		}).join('');
		return `${items}`;
	}
</script>

<div webc:nokeep @html="build($data, tag, limit, sort, link, klass=this.class)"></div>